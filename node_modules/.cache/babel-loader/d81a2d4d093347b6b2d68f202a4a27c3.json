{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/moviesapp22/src/components/Header.js\";\nimport * as React from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport { Link } from 'react-router-dom';\nimport { Typography, Box, Drawer, Toolbar, List, ListItem, ListItemText, ListItemIcon, Divider, IconButton, ListItemButton } from '@mui/material';\nimport MuiAppBar from '@mui/material/AppBar';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\nimport TheatersIcon from '@mui/icons-material/Theaters';\nimport TvIcon from '@mui/icons-material/Tv';\nimport ManageSearchIcon from '@mui/icons-material/ManageSearch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 280;\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: prop => prop !== 'open'\n})(_ref => {\n  let {\n    theme,\n    open\n  } = _ref;\n  return {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    ...(open && {\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen\n      }),\n      marginRight: drawerWidth\n    })\n  };\n});\n_c = AppBar;\nconst DrawerHeader = styled('div')(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-start'\n  };\n});\nexport default function PersistentDrawerRight() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex'\n      },\n      children: /*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"fixed\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          sx: {\n            background: 'red'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            noWrap: true,\n            sx: {\n              flexGrow: 1\n            },\n            component: \"div\",\n            children: [\"CloudFlix \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"body2\",\n              children: \"Your Movie Search App\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n} //  {\n//    /*\n//     // const theme = useTheme();\n//   // const [open, setOpen] = React.useState(false);\n//   // const handleDrawerOpen = () => {\n//   //   setOpen(true);\n//   // };\n//   // const handleDrawerClose = () => {\n//   //   setOpen(false);\n//   // };\n//   // const NavItems = [\n//   //   {\n//   //     id: '1',\n//   //     text: 'Trends',\n//   //     path: '/trends',\n//   //     icon: <TrendingUpIcon sx={{ color: 'white' }} />,\n//   //   },\n//   //   {\n//   //     id: '2',\n//   //     text: 'Movies',\n//   //     path: '/movies',\n//   //     icon: <TheatersIcon sx={{ color: 'white' }} />,\n//   //   },\n//   //   {\n//   //     id: '3',\n//   //     text: 'Series',\n//   //     path: '/series',\n//   //     icon: <TvIcon sx={{ color: 'white' }} />,\n//   //   },\n//   //   {\n//   //     id: '4',\n//   //     text: 'Search',\n//   //     path: '/search',\n//   //     icon: <ManageSearchIcon sx={{ color: 'white' }} />,\n//   //   },\n//   // ];\n//      <IconButton\n//               color='inherit'\n//               aria-label='open drawer'\n//               edge='end'\n//               onClick={handleDrawerOpen}\n//               sx={{\n//                 ...(open && { display: 'none' }),\n//                 '& .MuiSvgIcon-root': {\n//                   fontSize: '3rem',\n//                 },\n//               }}>\n//               <MenuIcon />\n//             </IconButton>\n//          <Drawer\n//           sx={{\n//             width: drawerWidth,\n//             flexShrink: 0,\n//             '& .MuiDrawer-paper': {\n//               width: 280,\n//               background: '#39375b',\n//             },\n//           }}\n//           variant='persistent'\n//           anchor='right'\n//           open={open}>\n//           <DrawerHeader>\n//             <IconButton onClick={handleDrawerClose}>\n//               {theme.direction === 'rtl' ? (\n//                 <ChevronLeftIcon />\n//               ) : (\n//                 <ChevronRightIcon />\n//               )}\n//             </IconButton>\n//           </DrawerHeader>\n//           <Divider />\n//           <List>\n//             {NavItems.map((item, key) => {\n//               // const { id, path, text, icon } = item;\n//               return (\n//                 <Link to={item.path}>\n//                   <ListItemButton>\n//                     <ListItem key={item.id}>\n//                       <ListItemIcon sx={{ color: 'white' }}>\n//                         {item.icon}\n//                       </ListItemIcon>\n//                       <ListItemText\n//                         primary={item.text}\n//                         sx={{ color: 'white' }}\n//                       />\n//                     </ListItem>\n//                   </ListItemButton>\n//                 </Link>\n//               );\n//             })}\n//           </List>\n//         </Drawer> */\n//  }\n\n_c2 = PersistentDrawerRight;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppBar\");\n$RefreshReg$(_c2, \"PersistentDrawerRight\");","map":{"version":3,"sources":["/Users/admin/Desktop/moviesapp22/src/components/Header.js"],"names":["React","styled","useTheme","Link","Typography","Box","Drawer","Toolbar","List","ListItem","ListItemText","ListItemIcon","Divider","IconButton","ListItemButton","MuiAppBar","MenuIcon","ChevronRightIcon","ChevronLeftIcon","TrendingUpIcon","TheatersIcon","TvIcon","ManageSearchIcon","drawerWidth","AppBar","shouldForwardProp","prop","theme","open","transition","transitions","create","easing","sharp","duration","leavingScreen","width","easeOut","enteringScreen","marginRight","DrawerHeader","display","alignItems","padding","spacing","mixins","toolbar","justifyContent","PersistentDrawerRight","background","flexGrow"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,sBAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SACEC,UADF,EAEEC,GAFF,EAGEC,MAHF,EAIEC,OAJF,EAKEC,IALF,EAMEC,QANF,EAOEC,YAPF,EAQEC,YARF,EASEC,OATF,EAUEC,UAVF,EAWEC,cAXF,QAYO,eAZP;AAaA,OAAOC,SAAP,MAAsB,sBAAtB;AAEA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;;;AAEA,MAAMC,WAAW,GAAG,GAApB;AAEA,MAAMC,MAAM,GAAGvB,MAAM,CAACc,SAAD,EAAY;AAC/BU,EAAAA,iBAAiB,EAAGC,IAAD,IAAUA,IAAI,KAAK;AADP,CAAZ,CAAN,CAEZ;AAAA,MAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD;AAAA,SAAsB;AACvBC,IAAAA,UAAU,EAAEF,KAAK,CAACG,WAAN,CAAkBC,MAAlB,CAAyB,CAAC,QAAD,EAAW,OAAX,CAAzB,EAA8C;AACxDC,MAAAA,MAAM,EAAEL,KAAK,CAACG,WAAN,CAAkBE,MAAlB,CAAyBC,KADuB;AAExDC,MAAAA,QAAQ,EAAEP,KAAK,CAACG,WAAN,CAAkBI,QAAlB,CAA2BC;AAFmB,KAA9C,CADW;AAKvB,QAAIP,IAAI,IAAI;AACVQ,MAAAA,KAAK,EAAG,eAAcb,WAAY,KADxB;AAEVM,MAAAA,UAAU,EAAEF,KAAK,CAACG,WAAN,CAAkBC,MAAlB,CAAyB,CAAC,QAAD,EAAW,OAAX,CAAzB,EAA8C;AACxDC,QAAAA,MAAM,EAAEL,KAAK,CAACG,WAAN,CAAkBE,MAAlB,CAAyBK,OADuB;AAExDH,QAAAA,QAAQ,EAAEP,KAAK,CAACG,WAAN,CAAkBI,QAAlB,CAA2BI;AAFmB,OAA9C,CAFF;AAMVC,MAAAA,WAAW,EAAEhB;AANH,KAAZ;AALuB,GAAtB;AAAA,CAFY,CAAf;KAAMC,M;AAiBN,MAAMgB,YAAY,GAAGvC,MAAM,CAAC,KAAD,CAAN,CAAc;AAAA,MAAC;AAAE0B,IAAAA;AAAF,GAAD;AAAA,SAAgB;AACjDc,IAAAA,OAAO,EAAE,MADwC;AAEjDC,IAAAA,UAAU,EAAE,QAFqC;AAGjDC,IAAAA,OAAO,EAAEhB,KAAK,CAACiB,OAAN,CAAc,CAAd,EAAiB,CAAjB,CAHwC;AAIjD;AACA,OAAGjB,KAAK,CAACkB,MAAN,CAAaC,OALiC;AAMjDC,IAAAA,cAAc,EAAE;AANiC,GAAhB;AAAA,CAAd,CAArB;AASA,eAAe,SAASC,qBAAT,GAAiC;AAC9C,sBACE;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEP,QAAAA,OAAO,EAAE;AAAX,OAAT;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAC,OAAjB;AAAA,+BACE,QAAC,OAAD;AAAS,UAAA,EAAE,EAAE;AAAEQ,YAAAA,UAAU,EAAE;AAAd,WAAb;AAAA,iCACE,QAAC,UAAD;AACE,YAAA,OAAO,EAAC,IADV;AAEE,YAAA,YAAY,MAFd;AAGE,YAAA,MAAM,MAHR;AAIE,YAAA,EAAE,EAAE;AAAEC,cAAAA,QAAQ,EAAE;AAAZ,aAJN;AAKE,YAAA,SAAS,EAAC,KALZ;AAAA,kDAMY;AAAA;AAAA;AAAA;AAAA,oBANZ,eAOE,QAAC,UAAD;AAAY,cAAA,YAAY,MAAxB;AAAyB,cAAA,OAAO,EAAC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAqBD,C,CACD;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MA1HwBF,qB","sourcesContent":["import * as React from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport { Link } from 'react-router-dom';\nimport {\n  Typography,\n  Box,\n  Drawer,\n  Toolbar,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Divider,\n  IconButton,\n  ListItemButton,\n} from '@mui/material';\nimport MuiAppBar from '@mui/material/AppBar';\n\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\nimport TheatersIcon from '@mui/icons-material/Theaters';\nimport TvIcon from '@mui/icons-material/Tv';\nimport ManageSearchIcon from '@mui/icons-material/ManageSearch';\n\nconst drawerWidth = 280;\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== 'open',\n})(({ theme, open }) => ({\n  transition: theme.transitions.create(['margin', 'width'], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: drawerWidth,\n  }),\n}));\n\nconst DrawerHeader = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n  justifyContent: 'flex-start',\n}));\n\nexport default function PersistentDrawerRight() {\n  return (\n    <>\n      <Box sx={{ display: 'flex' }}>\n        <AppBar position='fixed'>\n          <Toolbar sx={{ background: 'red' }}>\n            <Typography\n              variant='h6'\n              gutterBottom\n              noWrap\n              sx={{ flexGrow: 1 }}\n              component='div'>\n              CloudFlix <br />\n              <Typography gutterBottom variant='body2'>\n                Your Movie Search App\n              </Typography>\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </Box>\n    </>\n  );\n}\n//  {\n//    /*\n\n//     // const theme = useTheme();\n//   // const [open, setOpen] = React.useState(false);\n\n//   // const handleDrawerOpen = () => {\n//   //   setOpen(true);\n//   // };\n\n//   // const handleDrawerClose = () => {\n//   //   setOpen(false);\n//   // };\n\n//   // const NavItems = [\n//   //   {\n//   //     id: '1',\n//   //     text: 'Trends',\n//   //     path: '/trends',\n//   //     icon: <TrendingUpIcon sx={{ color: 'white' }} />,\n//   //   },\n//   //   {\n//   //     id: '2',\n//   //     text: 'Movies',\n//   //     path: '/movies',\n//   //     icon: <TheatersIcon sx={{ color: 'white' }} />,\n//   //   },\n//   //   {\n//   //     id: '3',\n//   //     text: 'Series',\n//   //     path: '/series',\n//   //     icon: <TvIcon sx={{ color: 'white' }} />,\n//   //   },\n//   //   {\n//   //     id: '4',\n//   //     text: 'Search',\n//   //     path: '/search',\n//   //     icon: <ManageSearchIcon sx={{ color: 'white' }} />,\n//   //   },\n//   // ];\n\n//      <IconButton\n//               color='inherit'\n//               aria-label='open drawer'\n//               edge='end'\n//               onClick={handleDrawerOpen}\n//               sx={{\n//                 ...(open && { display: 'none' }),\n//                 '& .MuiSvgIcon-root': {\n//                   fontSize: '3rem',\n//                 },\n//               }}>\n//               <MenuIcon />\n//             </IconButton>\n\n//          <Drawer\n//           sx={{\n//             width: drawerWidth,\n//             flexShrink: 0,\n//             '& .MuiDrawer-paper': {\n//               width: 280,\n//               background: '#39375b',\n//             },\n//           }}\n//           variant='persistent'\n//           anchor='right'\n//           open={open}>\n//           <DrawerHeader>\n//             <IconButton onClick={handleDrawerClose}>\n//               {theme.direction === 'rtl' ? (\n//                 <ChevronLeftIcon />\n//               ) : (\n//                 <ChevronRightIcon />\n//               )}\n//             </IconButton>\n//           </DrawerHeader>\n//           <Divider />\n\n//           <List>\n//             {NavItems.map((item, key) => {\n//               // const { id, path, text, icon } = item;\n//               return (\n//                 <Link to={item.path}>\n//                   <ListItemButton>\n//                     <ListItem key={item.id}>\n//                       <ListItemIcon sx={{ color: 'white' }}>\n//                         {item.icon}\n//                       </ListItemIcon>\n//                       <ListItemText\n//                         primary={item.text}\n//                         sx={{ color: 'white' }}\n//                       />\n//                     </ListItem>\n//                   </ListItemButton>\n//                 </Link>\n//               );\n//             })}\n//           </List>\n//         </Drawer> */\n//  }\n"]},"metadata":{},"sourceType":"module"}